#!/bin/bash
set -e

# Config here
org_and_repo="${1}"
target="${2}"
mode="${3}"
IFS='/' read -ra org_and_repo_arr <<< "${org_and_repo}"
org="${org_and_repo_arr[0]}"
repo="${org_and_repo_arr[1]}"

repo_web_path="https://bitbucket.org/${org_and_repo}"
repo_git_path="git@bitbucket.org:${org_and_repo}.git"
path="/opt/www/${org}/${repo}/${target}"
working_path="${path}/current"

# --------- DON'T TOUCH BELOW ------------

#########
# setup #
#########

orig_pwd="$(pwd)"
user="$(whoami)"
deploy_key="/home/${user}/.ssh/${org}-deploy-key"
quiet_option=""
quiet_suffix=""
output_prefix=">>> "
if [ "${3}" != "" ]
then
  output_prefix=""
  quiet_option=" -q "
  quiet_suffix=" > /dev/null 2>&1 "
fi

date=$(date "+%Y-%b-%d-%H-%M-%N")

# Sanity check and default assignment for "mode"
if [ "${mode}" != "update" -a "${mode}" != "clone" ]
then
  mode="update"
fi

# Sanity check for "target"
if [ "${target}" != "prod" -a "${target}" != "staging" -a "${target}" != "dev" ]
then
  output "Unknown target '${target}', exiting prematurely."
  exit 29
fi


#############
# functions #
#############

function output {
  output_text="${1}"
  echo "${output_prefix}${output_text}"
}

function clone {
  clone_path="${1}"
  output "Cloning ${repo_git_path} into ${clone_path}..."
  if [ -r ${deploy_key} ]
  then 
    output "Using deploy key (${deploy_key}) when cloning..."
    ssh-agent bash -c "ssh-add ${deploy_key} ${quiet_suffix} && git clone ${quiet_option} ${repo_git_path} ${clone_path}"
  else
    output "No deploy key found in ${deploy_key}, trying auth-less clone..."
    git clone ${quiet_option} ${repo_web_path}.git ${clone_path}
  fi
}


##############
# main logic #
##############

output "DEPLOYING '${org_and_repo}' to '${target}'..."
output ""

if [ ! -d "${path}" ]
then
  mkdir -p "${path}"
fi

if [ ! -d "${path}/logs" ]
then
  mkdir -p "${path}/logs"
fi
(chmod -fR g+w "${path}/logs" || true)

if [ $mode == "update" ]
then

  if [ -L ${working_path} ]
  then
    rm ${working_path}
  fi
  if [ ! -d ${working_path} ]
  then
    mkdir -p ${working_path}
  fi

  if [ ! -d "${working_path}/.git" ]
  then
    clone "${working_path}"
  fi
  output "Updating repo from remote..."
  cd "${working_path}"
  ssh-agent bash -c "ssh-add ${deploy_key} ${quiet_suffix} && git pull ${quiet_option}"

elif [ $mode == "clone" ]
then

  cd "${path}"
  clone "${date}"
  if [ -L "current" ]
  then
    rm "current"
  fi
  ln -s "${date}" "current"
  cd "${orig_pwd}"

else
  output "Unknown mode: ${mode}"
  exit 99
fi

cd "${working_path}"

# Do some special casing for common scenarios
if [ -d craft -a -d craft/storage ]
then
  output "Looks like a Craft installation, making craft/storage writable by the web server..."
  (chmod -fR g+w craft/storage || true)
fi

# Run repo deploy script, if it exists
deploy_script="${working_path}/bin/deploy"
if [ -r ${deploy_script} ]
then
  output "Found deploy script (${deploy_script}), handing over control..."
  ${deploy_script} ${target} ${mode}
else
  output "No deploy script found in ${deploy_script}, done!"
fi

cd "${orig_pwd}"
